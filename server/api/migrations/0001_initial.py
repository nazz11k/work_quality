# Generated by Django 5.0.6 on 2024-05-24 00:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('telegram_id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Nomenclature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('telegram_id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('email', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.city')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerLoyaltyIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer1', models.IntegerField()),
                ('answer2', models.IntegerField()),
                ('answer3', models.IntegerField()),
                ('datetime_sended', models.DateTimeField()),
                ('datetime_started', models.DateTimeField()),
                ('datetime_finished', models.DateTimeField(auto_now_add=True)),
                ('telegram_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
            ],
        ),
        migrations.CreateModel(
            name='FirstClientCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=100)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('datetime_started', models.DateTimeField()),
                ('datetime_finished', models.DateTimeField(auto_now_add=True)),
                ('telegram_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.region'),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceType', models.CharField(max_length=100)),
                ('payment', models.CharField(max_length=100)),
                ('warranty', models.BooleanField()),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.employee')),
                ('nomenclature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.nomenclature')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poll_type', models.CharField(max_length=100)),
                ('datetime_created', models.DateTimeField()),
                ('datetime_to_send', models.DateTimeField()),
                ('is_sent', models.BooleanField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.service')),
            ],
        ),
        migrations.CreateModel(
            name='RepairFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer1', models.IntegerField(blank=True, null=True)),
                ('answer2', models.IntegerField(blank=True, null=True)),
                ('answer3', models.IntegerField(blank=True, null=True)),
                ('answer4', models.IntegerField(blank=True, null=True)),
                ('answer5', models.CharField(blank=True, max_length=1000, null=True)),
                ('datetime_sended', models.DateTimeField()),
                ('datetime_started', models.DateTimeField()),
                ('datetime_finished', models.DateTimeField(auto_now_add=True)),
                ('telegram_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.service')),
            ],
        ),
        migrations.CreateModel(
            name='RefundFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer1', models.CharField(blank=True, max_length=1000, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('datetime_sended', models.DateTimeField()),
                ('datetime_started', models.DateTimeField()),
                ('datetime_finished', models.DateTimeField(auto_now_add=True)),
                ('telegram_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.service')),
            ],
        ),
        migrations.CreateModel(
            name='ProductFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer1', models.IntegerField(blank=True, null=True)),
                ('answer2', models.CharField(blank=True, max_length=1000, null=True)),
                ('datetime_sended', models.DateTimeField()),
                ('datetime_started', models.DateTimeField()),
                ('datetime_finished', models.DateTimeField(auto_now_add=True)),
                ('telegram_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.service')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerShopFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer1', models.IntegerField(blank=True, null=True)),
                ('answer2', models.IntegerField(blank=True, null=True)),
                ('answer3', models.IntegerField(blank=True, null=True)),
                ('answer4', models.IntegerField(blank=True, null=True)),
                ('answer5', models.CharField(blank=True, max_length=1000, null=True)),
                ('answer6', models.IntegerField(blank=True, null=True)),
                ('answer7', models.IntegerField(blank=True, null=True)),
                ('answer8', models.IntegerField(blank=True, null=True)),
                ('answer9', models.IntegerField(blank=True, null=True)),
                ('answer10', models.IntegerField(blank=True, null=True)),
                ('answer11', models.CharField(blank=True, max_length=1000, null=True)),
                ('datetime_sended', models.DateTimeField()),
                ('datetime_started', models.DateTimeField()),
                ('datetime_finished', models.DateTimeField(auto_now_add=True)),
                ('telegram_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.service')),
            ],
        ),
        migrations.CreateModel(
            name='Workplace',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.city')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='workplace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.workplace'),
        ),
    ]
